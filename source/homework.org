#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil toc:nil html-style:nil

#+TITLE: Prep Work
#+AUTHOR: X Ellis

#+BEGIN_EXPORT HTML
<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Topic1</a></li>
      <li><a href="2_Lesson.html">Topic2</a></li>
      <li><a href="3_Lesson.html">Topic3</a></li>
      <li><a href="4_Lesson.html">Topic4</a></li>
      <li><a href="5_Lesson.html">Topic5</a></li>
      <li><a href="Evaluation.html">Evaluation</a></li>
      <li><a href="homework.html">Prep</a></li>

    </ul>
  </div>
<div id="underlay" onclick="underlayoff()">
</div>
<div id="overlay" onclick="overlayoff()">
</div>
<div id=overlayMenu>
<p onclick="overlayon('hsla(0, 0%, 50%, 0.5)')">Grey overlay</p>
<p onclick="underlayon('hsla(300,100%,50%, 0.3)')">Pink</p>
<p onclick="underlayon('hsla(80, 90%, 40%, 0.4)')">Green</p>
<p onclick="underlayon('hsla(240,100%,50%,0.2)')">Blue</p>
<p onclick="underlayon('hsla(40,100%,50%,0.3)')">Cream</p>
<p onclick="underlayon('hsla(300,100%,40%,0.3)')">Liliac</p>
<p onclick="underlayon('hsla(300,100%,25%,0.3)')">Purple</p>
<p onclick="underlayon('hsla(60,100%,50%,0.3)')">Yellow</p>
</div>
#+END_EXPORT

* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:


* Prep work 1 - Quiz with If Statement
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Quiz It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- Run the code below to see what happens.  Be sure to input your answer on the right bottom window.
- After running the code, have a look at the code and try to understand how it works.
- Your homework task:
  - add another quiz question under the last line of comment (starting with a #)
  - ask user for an answer and store it in a variable
  - use another if statement to check if the answer is correct
  - output appropriate messages depending on the answer is correct or not
  - test your quiz by answer both questions
  - screen shot your code and upload to www.bournetolearn.com

#+BEGIN_EXPORT html

<iframe src="https://trinket.io/embed/python/8cee2d344d" width="100%" height="600" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>

#+END_EXPORT

* Prep work 2 - Half Moon Rising:
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
/I feel like we're going in circles!/

- Let's learn about circles!

- The Turtle library has a built-in function for making a circle!
- We can call this function by typing turtle.circle()
- Circles are a very useful tool!
- Look at the example below for more tips on how to draw circles

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
/Think it, Trinket!/

#+BEGIN_EXPORT html
<iframe src="https://trinket.io/embed/python/fd97e2dc6b" width="100%" 
height="600" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>
#+END_EXPORT

- Try editing the code to draw another smaller circle underneath (75)
- Remember which direction to face to draw it down
- Try drawing another small circle in the middle of the bigger ones
- Remember to use penup() and pendown() to move without drawing a line!
*** Your homework:
- The code below gives you some code to draw one half circle
- You need to define a function called halfMoon()
- You then need to call the halfMoon function in a loop to create the following pattern.

  #+begin_export html
<img src="./img/halfMoons.png" width=200 height=180>
<iframe src="https://trinket.io/embed/python/cfef48097a" style="min-width:900px;" height="400" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>

  #+end_export




* Prep work 3 - Bearly work:
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

- Now that you've mastered the circle function in the previous homework, how about using this to draw some faces!
- See if you can create a bear face like the one I created below! 
- Remember to use the: 
1. Circle function (with radius and extent)
2. Triangle function that you made in previous lessons
3. The turtle.penup() and turtle.pendown() functions

- Tip: Create a new function called DrawABear(): and put the code in there!

[[./img/BearFace.png]]

#+BEGIN_EXPORT html
<iframe src="https://trinket.io/embed/python/3eba2638d1" width="100%" height="600" 
frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>
#+END_EXPORT

- Great! Now we can add some detail!
- Try adding pupils and an inner part to the bear's ears
- Remember to use a different colour!
