<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Topic 3 - Functions</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="X Ellis" />
<link rel="stylesheet" type="text/css" href="css/styles.css"/>
<link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
<script src="js/navbar.js" type="text/javascript"></script>
<script src="js/strikeThrough.js" type="text/javascript"></script>
<script type="text/javascript">
// @license magnet:?xt=urn:btih:e95b018ef3580986a04669f1b5879592219e2a7a&dn=public-domain.txt Public Domain
<!--/*--><![CDATA[/*><!--*/
     function CodeHighlightOn(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.add("code-highlighted");
         target.classList.add("code-highlighted");
       }
     }
     function CodeHighlightOff(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.remove("code-highlighted");
         target.classList.remove("code-highlighted");
       }
     }
    /*]]>*///-->
// @license-end
</script>
</head>
<body>
<div id="content">
<h1 class="title">Topic 3 - Functions</h1>

<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Topic1</a></li>
      <li><a href="2_Lesson.html">Topic2</a></li>
      <li><a href="3_Lesson.html">Topic3</a></li>
      <li><a href="4_Lesson.html">Topic4</a></li>
      <li><a href="5_Lesson.html">Topic5</a></li>
      <li><a href="Evaluation.html">Evaluation</a></li>
      <li><a href="homework.html">Prep</a></li>
    </ul>
  </div>

<div id="underlay" onclick="underlayoff()">
</div>
<div id="overlay" onclick="overlayoff()">
</div>
<div id=overlayMenu>
<p onclick="overlayon('hsla(0, 0%, 50%, 0.5)')">Grey overlay</p>
<p onclick="underlayon('hsla(300,100%,50%, 0.3)')">Pink</p>
<p onclick="underlayon('hsla(80, 90%, 40%, 0.4)')">Green</p>
<p onclick="underlayon('hsla(240,100%,50%,0.2)')">Blue</p>
<p onclick="underlayon('hsla(40,100%,50%,0.3)')">Cream</p>
<p onclick="underlayon('hsla(300,100%,40%,0.3)')">Liliac</p>
<p onclick="underlayon('hsla(300,100%,25%,0.3)')">Purple</p>
<p onclick="underlayon('hsla(60,100%,50%,0.3)')">Yellow</p>
</div>
<div id="outline-container-org5acfe82" class="outline-2 objectives">
<h2 id="org5acfe82"><span class="section-number-2">1</span> Objectives</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-org7986276" class="outline-3 learn">
<h3 id="org7986276">Developing your skills in problem solving using programming language Python, specifically:</h3>
<div class="outline-text-3" id="text-org7986276">
<ul class="org-ul">
<li>Further develop skills in using <b>for</b> and <b>while</b> loops</li>
<li>Developing skills in logical thinking when solving problems</li>
<li>Develop understanding the purpose of functions in programming</li>
<li>Developing skills in creating user defined functions to break down a larger problem into smaller problems</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-orgf3918a6" class="outline-2 activity">
<h2 id="orgf3918a6"><span class="section-number-2">2</span> Functions</h2>
<div class="outline-text-2" id="text-2">
</div>


<div id="outline-container-org8b9216c" class="outline-3 try">
<h3 id="org8b9216c">Back to loop</h3>
<div class="outline-text-3" id="text-org8b9216c">
<dl class="org-dl">
<dt>Task 1</dt><dd><p>
Take a look at the following code that draws 8 squares using a for loop. Your task is to identify the repeated code and make another for loop to reduce the line of code
</p>

<iframe src="https://trinket.io/embed/python/196559988e" width="100%" height="600" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>

<dl class="org-dl">
<dt>Task 2</dt><dd>Change the code above (keep your new for loop) so that 8 pentagons will draw instead of 8 squares as shown below?</dd>
</dl>
<img src="./img/function8Pentagons.png" width=50%></dd>
</dl>
</div>
</div>

<div id="outline-container-org05b235b" class="outline-3 learn">
<h3 id="org05b235b">What is a function?</h3>
<div class="outline-text-3" id="text-org05b235b">
<ul class="org-ul">
<li>When solving big problems, it is a good practice to break up problems into smaller, easier to solve problems, which lets you focus on one thing at atime.</li>
<li><b>Functions</b> are one way to do this in Python. Let’s take Tom.reset() for example. reset is a <b>function</b> we call on our turtle, and it is actually an abstraction for a number of steps, namely:

<ul class="org-ul">
<li>Erase the drawing board.</li>
<li>Set the width and color back to default.</li>
<li>Move the turtle back to its initial position.</li>
</ul></li>

<li>But because all the code is contained in the function, we don’t have to worry about these details. We can simply call this function, and know it will do what it says for us.</li>
<li>Try Tom.reset() in the above code and see what it does!</li>
</ul>
</div>
</div>

<div id="outline-container-org339486e" class="outline-3 learn">
<h3 id="org339486e">So how to write your own functions?</h3>
<div class="outline-text-3" id="text-org339486e">
<ul class="org-ul">
<li>Identify the need! Will this function solve one problem? For example, will it draw a square so I can use it to draw 8 of them?</li>
<li><p>
In Python, to define a function, you use the key word <b>def</b>.  The following exmaple has a function named draw<sub>square</sub>:
</p>
<div class="org-src-container">
<pre class="src src-python">def draw_square():
    for i in range(4):
	Tom.fd(100)
	Tom.left(90)
</pre>
</div></li>
<li><p>
Once a function is defined, you can <b>call</b> the function using its name to perform the purpose the function is defined for:
</p>
<div class="org-src-container">
<pre class="src src-python">def draw_square():
    for i in range(4):
	Tom.fd(100)
	Tom.left(90)

for i in range(8):
    draw_square()    
    Tom.left(45)
</pre>
</div></li>
</ul>
</div>
</div>

<div id="outline-container-org4de8b5b" class="outline-3 learn">
<h3 id="org4de8b5b">Functions with parameters</h3>
<div class="outline-text-3" id="text-org4de8b5b">
<ul class="org-ul">
<li>As we add functions to our code, we remove duplication.  This process is called "modular" programming. This is a good practice as it allows us to break down problems.</li>
<li>But the functions we have defined so far are not very flexible.  If we want to draw a  different size of square,  we need to write a new function.</li>
<li>That is why we need to be able to give parameters, also called arguments, to the function. This way the variables in the function can have different values each time we call the function.
For example, the built-in forward function can have a parameter. We can move forward by 100 or 200 or -100! Tom.forward(100), Tom.forward(200) etc.</li>
<li>Even the turtle can be a parameter if we have more than one turtle in our code.</li>
<li><p>
To improve our function, we added one parameter called <b>length</b>
</p>
<div class="org-src-container">
<pre class="src src-Python">def draw_square(length):
    for i in range(4):
	Tom.fd(length)
	Tom.left(90)

for i in range(8):
    draw_square(100)    
    Tom.left(45)
</pre>
</div>

<ul class="org-ul">
<li><p>
To improve our function even more, we added one more parameter called <b>turtleName</b>. Notice how the order of parameters when calling the function!
</p>
<div class="org-src-container">
<pre class="src src-Python">def draw_square(length, turtleName):
    for i in range(4):
	turtleName.fd(length)
	turtleName.left(90)

for i in range(8):
    draw_square(100, Tom)    
    Tom.left(45)
</pre>
</div></li>

<li>You can add as many parameters as needed. Just make sure when you call the function, you have the same number of parameters and in the same oder.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-orgbc1da29" class="outline-3 try">
<h3 id="orgbc1da29">Your Tasks - screenshot your finished code and upload</h3>
<div class="outline-text-3" id="text-orgbc1da29">
<p>
Launch IDLE on your PC and create a new python file in the code editor for the two tasks below.
</p>
<dl class="org-dl">
<dt>Task 1</dt><dd>define a function called draw_pentagon and call it in a loop to draw 5 evenly spaced pentagon along a horizontal line</dd>

<dt>Task 2</dt><dd><p>
define a function called draw_hexagon with two parameters, one for length, one for colour. Draw a shape like below:
</p>
<img src ='./img/hexagonBlueRed.png' width=50%></dd>

<dt>Extension Task</dt><dd><p>
define a function with two parameters (length and sides) that can draw a shape with as many number of equal sides as it needs to be (more than two) and at any length and create a image like below:
</p>
<img src ='./img/functionExtension.png' width=50%></dd>
</dl>
</div>
</div>
</div>
</div>
</body>
</html>
