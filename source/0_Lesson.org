#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:nil creator:nil timestamp:nil toc:nil html-style:nil
#+TITLE: Unit Overview
#+AUTHOR: Xiaohui Ellis

#+BEGIN_EXPort html

<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Topic1</a></li>
      <li><a href="2_Lesson.html">Topic2</a></li>
      <li><a href="3_Lesson.html">Topic3</a></li>
      <li><a href="4_Lesson.html">Topic4</a></li>
      <li><a href="5_Lesson.html">Topic5</a></li>
      <li><a href="Evaluation.html">Evaluation</a></li>
      <li><a href="homework.html">Prep</a></li>
    </ul>
  </div>

<div id="underlay" onclick="underlayoff()">
</div>
<div id="overlay" onclick="overlayoff()">
</div>
<div id=overlayMenu>
<p onclick="overlayon('hsla(0, 0%, 50%, 0.5)')">Grey overlay</p>
<p onclick="underlayon('hsla(300,100%,50%, 0.3)')">Pink</p>
<p onclick="underlayon('hsla(80, 90%, 40%, 0.4)')">Green</p>
<p onclick="underlayon('hsla(240,100%,50%,0.2)')">Blue</p>
<p onclick="underlayon('hsla(40,100%,50%,0.3)')">Cream</p>
<p onclick="underlayon('hsla(300,100%,40%,0.3)')">Liliac</p>
<p onclick="underlayon('hsla(300,100%,25%,0.3)')">Purple</p>
<p onclick="underlayon('hsla(60,100%,50%,0.3)')">Yellow</p>
</div>

#+END_EXPORT
* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:
* Overview of this Unit.
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:

** Developing your skills in problem solving using programming language Python, specifically:
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- Understand data types and purposes of variables
- Understand the two types of loops and when to use which
- Understand the using of conditionals and logic operations
- Understand why modular programming is used
 
** Objectives
:PROPERTIES:
:HTML_CONTAINER_CLASS: objectives
:END:

*Algorithms* 
- Design simple *algorithms* using sequences, loops, and selection i.e. if statements.
- Design solutions by *decomposing* a problem into smaller, solvable problems and create a sub-solution for each of these parts 
- Understand that algorithms are *implemented* on digital devices as programs. Uses logical reasoning to predict outcomes.
- Understand *abstraction* in problem solving means removing unimportant details to solutions. 
- Understands that *iteration* is the *repetition of a process* such as a loop.

*Programming*
- Creates programs that implement algorithms to achieve given goals. 
- Declares and assigns variables, appropriate use of sequence, selection (if statement) and repetition (loops) in reaching a solution.
- Understands that programming bridges the gap between algorithmic solutions and computers.
- Designs, writes and debugs modular programs using functions.
** Key Words and Key Concepts
:PROPERTIES:
:HTML_CONTAINER_CLASS: objectives
:END:


- agorithm
- computational thinking
- abstraction
- pattern recognition
- sequence
- selection
- repetition
- function and modular programming
